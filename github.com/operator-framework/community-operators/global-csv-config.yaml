# This file contains configuration which is common to all bundle CSV files.
#
# Some of the CSV fields are required, and while most of these fields are filled
# in automatically by operator-sdk generate bundle, some of the values are
# placeholders and some are left empty.
# See https://github.com/operator-framework/community-operators/blob/master/docs/packaging-required-fields.md
#
# This file contains the values for those fields which should be the same across all versions of cert-manager.
# These values are consumed by the hack/fixup-csv script, which is executed in the Makefile.
#
# TODO(wallrj): some of these fields such as min_ and alm_examples apply to
# ranges of cert-manager versions, so we need to handle that for future
# cert-manager versions where the min_kubernetes_version may need to be
# incremented or where new fields need to be added to the CRD samples for
# certain cert-manager versions.

display_name: cert-manager

description: |
  cert-manager is a Kubernetes add-on to automate the management and issuance of TLS certificates from various issuing sources.
  It will ensure certificates are valid and up to date periodically, and attempt to renew certificates at an appropriate time before expiry.

maturity: stable

capabilities: Full Lifecycle

categories:
- Security

support: The cert-manager maintainers

repository: https://github.com/jetstack/cert-manager

min_kubernetes_version: 1.16.0

keywords:
- TLS
- secrets
- security
- certificates

links:
  - name: Documentation
    url: https://cert-manager.io/

provider:
    name: The cert-manager maintainers
    url: https://cert-manager.io/


maintainers:
- name: The cert-manager maintainers
  email: cert-manager-maintainers@googlegroups.com

alm_examples: |
  [
    {
        "apiVersion": "cert-manager.io/v1",
        "kind": "Issuer",
        "metadata": {
            "name": "test-selfsigned",
            "namespace": "cert-manager-test"
        },
        "spec": {
            "selfSigned": {}
        }
    },
    {
        "apiVersion": "cert-manager.io/v1",
        "kind": "Certificate",
        "metadata": {
            "name": "selfsigned-cert",
            "namespace": "cert-manager-test"
        },
        "spec": {
            "dnsNames": [
                "example.com"
            ],
            "issuerRef": {
                "name": "test-selfsigned"
            },
            "secretName": "selfsigned-cert-tls"
        }
    }
  ]
